use lalrpop_util::ParseError;

use crate::runfile::*;
use crate::parser;

grammar;

extern {
    type Error = String;
}

pub DoubledArg: Vec<ArgPart> = {
    "\"" <DoubledPart*> "\""
}

DoubledPart: ArgPart = {
    r"[[:alnum:] !#%&(-/:-@\[\]-`{-~]*" => ArgPart::Str(<>.to_owned()),
    "$" => ArgPart::Str("$".to_owned()),
    r"\$[[:alpha:]_][[:alnum:]_]*" => ArgPart::Var(<>[1..].to_owned()),
    r"\$[[:digit:]]+" =>? match <>[1..].parse::<usize>() {
        Ok(i) => Ok(ArgPart::Arg(i)),
        Err(e) => Err(ParseError::User { error: format!("{}", e)}),
    },
    r#"\$\([[:alnum:] !#%&'*-/:-@\[\]-`{-~\]]*\)"# =>? Ok(ArgPart::Cmd(parser::CommandParser::new().parse(&<>[2..<>.len() - 1])?))
}